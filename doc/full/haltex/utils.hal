needs "listings"
needs "xcolor"

print "
\\newcommand{\\CodeSymbol}[1]{\\textcolor{brown}{#1}}
\\lstdefinelanguage{hal}{
    basicstyle=\\ttfamily,
    sensitive=false,
    morestring=[b]\",
    keywords=[1]{=,for,in,while,if,else,elif,class,def,with,return},
    keywords=[2]{Array, print, self, yield},
    keywordstyle=[1]\\color{blue},
    keywordstyle=[2]\\color{red!60!black},
    ={\\color{brown!50!black}\\bfseries},
    morecomment=[l]{\\#},
    showstringspaces=false,
    stringstyle=\\color{green!50!black},
    captionpos=b,
    literate=%
      {\\{}{{\\CodeSymbol{\\{}}}1
      {\\}}{{\\CodeSymbol{\\}}}}1
      {(}{{\\CodeSymbol{(}}}1
      {)}{{\\CodeSymbol{)}}}1
      {>}{{\\CodeSymbol{>}}}1
      {<}{{\\CodeSymbol{<}}}1
      {=}{{\\CodeSymbol{=}}}1
      {;}{{\\CodeSymbol{;}}}1
      {[}{{\\CodeSymbol{[}}}1
      {]}{{\\CodeSymbol{]}}}1
      {:}{{\\CodeSymbol{:}}}1
      {.}{{\\CodeSymbol{.}}}1
      {+}{{\\CodeSymbol{+}}}1
      {-}{{\\CodeSymbol{-}}}1
  }"

def code file, capt => none:
  code = Process.exec "cat examples/%s.hal" % file
  exec = Process.exec "hal examples/%s.hal" % file
  
  figure options => "h!":
    lstlisting options => "language=hal":
      print code.output

    verbatim:
      print "=> " + exec.output if exec.status == 0 else print exec.error

    caption pstyle capt if not capt.none?
